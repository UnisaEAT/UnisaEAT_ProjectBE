var crypto = require('crypto')

/**
 * Hashing e salt della password
 * @param {String} password- password
 * @returns {object}- composed by hash and salt generated by password
 */
exports.hashPassword = function (password) {
    var salt = crypto.randomBytes(256).toString('base64')
    var iterations = 10000
    var hash = crypto.pbkdf2Sync(password, salt, iterations, 512, 'sha512').toString('hex')

    var passwordHashed = {
        salt: salt,
        hash: hash
    }

    return passwordHashed
}

/**
 * Check if password is correct
 * @param {Hash} savedHash- hash of stored password
 * @param {Salt} savedSalt- salt of stored password
 * @param {String} passwordAttempt- password to check
 * @returns {Boolean}- true if the password correspond, else false
 */
exports.checkPassword = function (savedHash, savedSalt, passwordAttempt) {
    return savedHash === crypto.pbkdf2Sync(passwordAttempt, savedSalt, 10000, 512, 'sha512').toString('hex')
}